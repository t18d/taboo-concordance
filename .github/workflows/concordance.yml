name: Generate README.md
run-name: Generate README.md
on: 
  push:
    branches:
      - main
    paths:
      - concordance.csv
      - README.md

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "csv"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2   # Enough history to amend last commit
          sparse-checkout: |
            concordance.csv
            csv-to-md.py
            README.md

      - name: Detect file changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          list-files: shell
          filters: |
            csv:
              - concordance.csv
            md:
              - README.md


      # Handle CSV changes in batch OR rebuild all on dispatch
      - name: Process CSVs
        if: steps.filter.outputs.csv == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          python csv-to-md.py

      # Handle Markdown changes in batch (no dispatch override)
      - name: Update last_modified_at in changed MDs
        if: steps.filter.outputs.md == 'true'
        run: |
          sed -i "0,/last_modified_at.*/s//last_modified_at: $(date -Iseconds)/" README.md

      # Capture original commit author and message
      - name: Get author
        id: author
        run: |
          echo "name=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
          echo "email=$(git log -1 --pretty=format:'%ae')" >> $GITHUB_OUTPUT
          {
            echo "msg<<EOF"
            git log -1 --pretty=%B
            echo "EOF"
          } >> $GITHUB_OUTPUT

      # Amend the last commit instead of creating a new one
      - uses: stefanzweifel/git-auto-commit-action@v7
        with:
          commit_options: '--amend --no-edit'
          commit_user_name: ${{ steps.author.outputs.name }}
          commit_user_email: ${{ steps.author.outputs.email }}
          commit_message: ${{ steps.author.outputs.msg }}
          push_options: '--force-with-lease'
          file_pattern: README.md
